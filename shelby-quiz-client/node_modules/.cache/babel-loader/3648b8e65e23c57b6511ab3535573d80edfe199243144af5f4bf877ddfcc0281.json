{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Quiz App with React and Net Core Api\\\\shelby-quiz-client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { TextField, Button, Box, Card, CardContent, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport Center from \"./Center\";\nimport useForm from \"../hooks/useForm\";\nimport { createAPIEndpoint, ENDPOINTS } from \"../api\";\nimport { useStateContext } from \"../hooks/useStateContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getFreshModel = () => ({\n  name: \"\",\n  email: \"\"\n});\nexport default function Login() {\n  _s();\n  const {\n    context,\n    setContext\n  } = useStateContext();\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange\n  } = useForm(getFreshModel);\n  const login = e => {\n    e.preventDefault();\n    if (validate()) {\n      createAPIEndpoint(ENDPOINTS.participant).post(values).then(res => {\n        setContext({\n          participantId: res.data.participantId\n        });\n        console.log(res);\n      }).catch(err => console.log(err));\n    }\n  };\n  const validate = () => {\n    let temp = {};\n    temp.email = /\\S+@\\S+\\.\\S+/.test(values.email) ? \"\" : \"\";\n    temp.name = values.name != \"\" ? \"\" : \"This field is required\";\n    setErrors(temp);\n    return Object.values(temp).every(x => x == \"\");\n  };\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: \"400px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          sx: {\n            my: 3\n          },\n          children: \"React, Asp.net Core Quiz App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            \" & .MuiTextField-root\": {\n              m: 1,\n              width: \"90%\"\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            autoComplete: \"on\",\n            onSubmit: login,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              name: \"email\",\n              variant: \"outlined\",\n              value: values.email,\n              onChange: handleInputChange,\n              ...(errors.email && {\n                error: true,\n                helperText: errors.email\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Name\",\n              name: \"name\",\n              variant: \"outlined\",\n              value: values.name,\n              onChange: handleInputChange,\n              ...(errors.name && {\n                error: true,\n                helperText: errors.name\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"large\",\n              sx: {\n                width: \"90%\"\n              },\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"r1Dzo2KP56OE8JgHP1Jk8dhj/IE=\", false, function () {\n  return [useStateContext, useForm];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["TextField","Button","Box","Card","CardContent","Typography","React","Center","useForm","createAPIEndpoint","ENDPOINTS","useStateContext","jsxDEV","_jsxDEV","getFreshModel","name","email","Login","_s","context","setContext","values","setValues","errors","setErrors","handleInputChange","login","e","preventDefault","validate","participant","post","then","res","participantId","data","console","log","catch","err","temp","test","Object","every","x","children","sx","width","textAlign","variant","my","fileName","_jsxFileName","lineNumber","columnNumber","m","noValidate","autoComplete","onSubmit","label","value","onChange","error","helperText","type","size","_c","$RefreshReg$"],"sources":["C:/Projects/Quiz App with React and Net Core Api/shelby-quiz-client/src/components/Login.js"],"sourcesContent":["import {\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport Center from \"./Center\";\r\nimport useForm from \"../hooks/useForm\";\r\nimport { createAPIEndpoint, ENDPOINTS } from \"../api\";\r\nimport { useStateContext } from \"../hooks/useStateContext\";\r\n\r\nconst getFreshModel = () => ({\r\n  name: \"\",\r\n  email: \"\",\r\n});\r\n\r\nexport default function Login() {\r\n  const { context, setContext } = useStateContext();\r\n\r\n  const { values, setValues, errors, setErrors, handleInputChange } =\r\n    useForm(getFreshModel);\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      createAPIEndpoint(ENDPOINTS.participant)\r\n        .post(values)\r\n        .then((res) => {\r\n          setContext({ participantId: res.data.participantId });\r\n          console.log(res);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = {};\r\n    temp.email = /\\S+@\\S+\\.\\S+/.test(values.email) ? \"\" : \"\";\r\n    temp.name = values.name != \"\" ? \"\" : \"This field is required\";\r\n    setErrors(temp);\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n\r\n  return (\r\n    <Center>\r\n      <Card sx={{ width: \"400px\" }}>\r\n        <CardContent sx={{ textAlign: \"center\" }}>\r\n          <Typography variant=\"h3\" sx={{ my: 3 }}>\r\n            React, Asp.net Core Quiz App\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              \" & .MuiTextField-root\": {\r\n                m: 1,\r\n                width: \"90%\",\r\n              },\r\n            }}\r\n          >\r\n            <form noValidate autoComplete=\"on\" onSubmit={login}>\r\n              <TextField\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                variant=\"outlined\"\r\n                value={values.email}\r\n                onChange={handleInputChange}\r\n                {...(errors.email && { error: true, helperText: errors.email })}\r\n              />\r\n              <TextField\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                value={values.name}\r\n                onChange={handleInputChange}\r\n                {...(errors.name && { error: true, helperText: errors.name })}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                sx={{ width: \"90%\" }}\r\n              >\r\n                Sign In\r\n              </Button>\r\n            </form>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Center>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}